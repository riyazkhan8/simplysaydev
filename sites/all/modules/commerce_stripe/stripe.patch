diff --git commerce_stripe.install commerce_stripe.install
index 289e15d..a80ba9c 100755
--- commerce_stripe.install
+++ commerce_stripe.install
@@ -28,18 +28,28 @@ function commerce_stripe_requirements($phase) {
     }
     $requirements['commerce_stripe_php']['title'] = $t('Stripe PHP library');
 
-    // Check for Commerce currency.
-    if (in_array(commerce_default_currency(), array('USD', 'CAD', 'EUR', 'GBP', 'AUD', 'CHF'))) {
+    // Check for supported payment currencies.
+    $supported_currencies = commerce_stripe_payment_currencies();
+    $currencies = commerce_currencies();
+    $default = commerce_default_currency();
+
+    if (in_array(strtolower(commerce_default_currency()), $supported_currencies)) {
       $requirements['commerce_stripe_currency'] = array(
         'value' => $t('Valid currency'),
         'severity' => REQUIREMENT_OK,
+        'description' => $t('Currencies are correctly configured. Default: @default', array(
+          '@default' => $currencies[$default]['name'],
+        )),
       );
     }
     else {
       $requirements['commerce_stripe_currency'] = array(
         'value' => $t('Invalid default currency!'),
         'severity' => REQUIREMENT_ERROR,
-        'description' => $t('Stripe currently supports only USD, CAD, EUR, GBP, AUD and CHF as a currency.'),
+        'description' => $t('Your Stripe account does not accept default currency @default. Please <a href="@config">configure your currency settings</a> and update your payment method settings accordingly.', array(
+          '@default' => $currencies[$default]['name'],
+          '@config' => url('admin/commerce/config/currency'),
+        )),
       );
     }
     $requirements['commerce_stripe_currency']['title'] = $t('Stripe currency check');
diff --git commerce_stripe.module commerce_stripe.module
index 0800638..377eeb5 100755
--- commerce_stripe.module
+++ commerce_stripe.module
@@ -152,16 +152,20 @@ function commerce_stripe_return_access($order, $transaction) {
 function commerce_stripe_settings_form($settings) {
   $form = array();
   $currencies = commerce_currencies(TRUE);
-  $stripe_currency_list = array();
+  $currency_list = array();
+  $supported_currencies = commerce_stripe_payment_currencies();
 
+  // Ensure we only include currencies we support.
   foreach ($currencies as $currency_code => $currency) {
-    $stripe_currency_list[$currency_code] = $currency['name'];
+    if (in_array(strtolower($currency_code), $supported_currencies)) {
+      $currency_list[$currency_code] = $currency['name'];
+    }
   }
 
   $form['stripe_currency'] = array(
     '#type' => 'select',
     '#title' => t('Currency'),
-    '#options' => $stripe_currency_list,
+    '#options' => $currency_list,
     '#description' => t('Select the currency that you are using.'),
     '#default_value' => !empty($settings['stripe_currency']) ? $settings['stripe_currency'] : 'USD',
   );
@@ -1504,7 +1508,29 @@ function commerce_stripe_commerce_stripe_metadata($order) {
 // Helper function to set the API key.
 // @todo: Use with a global config we can programmatically change (via Rules etc.)
 function _commerce_stripe_set_api_key($payment_method) {
-  Stripe\Stripe::setApiKey(trim($payment_method['settings']['secret_key']));
+  if (!empty($payment_method['settings']['secret_key'])) {
+    Stripe\Stripe::setApiKey(trim($payment_method['settings']['secret_key']));
+  }
+}
+
+/**
+ * Supported payment currencies will vary by location of the Stripe account.
+ *
+ * return array
+ *   An associative array of three-character currency codes.
+ */
+function commerce_stripe_payment_currencies() {
+  commerce_stripe_load_library();
+  $supported_currencies = array();
+  $payment_method = commerce_payment_method_instance_load('commerce_stripe|commerce_payment_commerce_stripe');
+
+  if (!empty($payment_method['settings']['secret_key'])) {
+    _commerce_stripe_set_api_key($payment_method);
+    $info = \Stripe\Account::retrieve();
+    $country_spec = \Stripe\CountrySpec::retrieve($info->country);
+    $supported_currencies = $country_spec->supported_payment_currencies;
+  }
+  return $supported_currencies;
 }
 
 /**

