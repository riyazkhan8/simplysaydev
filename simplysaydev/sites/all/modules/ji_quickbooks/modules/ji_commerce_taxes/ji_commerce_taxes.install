<?php

/**
 * @file
 * Handles installation settings.
 */
define('JI_COMMERCE_TAXES_COMMERCE_TAX_RATE_TABLE', 'commerce_tax_rate');

/**
 * Implements hook_schema().
 */
function ji_commerce_taxes_schema() {
  $schema['ji_commerce_taxes_agencies'] = array(
    'description' => 'The base table for all tax agencies related to commerce_taxes.',
    'fields' => array(
      'id' => array(
        'description' => 'The primary identifier for a record.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'name' => array(
        'description' => 'The machine-name of this type related to commerce_tax_rate',
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'default' => '',
      ),
      'component_name' => array(
        'description' => 'Component name.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      ),
      'agency_name' => array(
        'description' => 'Agency name.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      ),
      'agency_id' => array(
        'description' => 'The agency id.',
        'type' => 'int',
        'length' => 11,
        'not null' => FALSE,
      ),
      'agency_rate' => array(
        'description' => 'The agency rate.',
        'type' => 'float',
        'size' => 'big',
        'default' => 0.0,
      ),
    ),
    'primary key' => array('id'),
  );
  return $schema;
}

/**
 * Add two new fields to the commerce_tax_rate table.
 *
 * Helps keep QuickBooks tax code information in sync.
 */
function ji_commerce_taxes_install() {
  $spec_quickbooks_tax_id = array(
    'type' => 'int',
    'description' => 'QuickBooks tax code id.',
    'length' => 10,
    'not null' => FALSE,
  );
  $quickbooks_tax_id = 'quickbooks_tax_id';
  db_add_field(JI_COMMERCE_TAXES_COMMERCE_TAX_RATE_TABLE, $quickbooks_tax_id, $spec_quickbooks_tax_id);

  $spec_quickbooks_tax_active = array(
    'type' => 'int',
    'description' => '1 if QuickBooks tax code is active 0 otherwise.',
    'length' => 1,
    'not null' => FALSE,
  );
  $quickbooks_tax_active = 'quickbooks_tax_active';
  db_add_field(JI_COMMERCE_TAXES_COMMERCE_TAX_RATE_TABLE, $quickbooks_tax_active, $spec_quickbooks_tax_active);

  $spec_quickbooks_updated = array(
    'type' => 'int',
    'description' => 'QBO updated timestamp. Used to compare like records.',
    'length' => 11,
    'not null' => FALSE,
  );
  $quickbooks_tax_updated = 'quickbooks_tax_updated';
  db_add_field(JI_COMMERCE_TAXES_COMMERCE_TAX_RATE_TABLE, $quickbooks_tax_updated, $spec_quickbooks_updated);
}

/**
 * We have to modify the commerce_tax_rate table schema.
 *
 * If we don't do this we won't be able to add new values to
 * our new columns.
 */
function ji_commerce_taxes_schema_alter(&$schema) {
  if (isset($schema[JI_COMMERCE_TAXES_COMMERCE_TAX_RATE_TABLE])) {
    $schema[JI_COMMERCE_TAXES_COMMERCE_TAX_RATE_TABLE]['fields']['quickbooks_tax_id'] = array(
      'type' => 'int',
      'length' => 10,
      'not null' => FALSE,
    );
    $schema[JI_COMMERCE_TAXES_COMMERCE_TAX_RATE_TABLE]['fields']['quickbooks_tax_active'] = array(
      'type' => 'int',
      'length' => 1,
      'not null' => FALSE,
    );
    $schema[JI_COMMERCE_TAXES_COMMERCE_TAX_RATE_TABLE]['fields']['quickbooks_tax_updated'] = array(
      'type' => 'int',
      'length' => 11,
      'not null' => FALSE,
    );
  }
}

/**
 * Return commerce_tax_rate table to its original form.
 */
function ji_commerce_taxes_uninstall() {
  // Look for and delete any rules_configs related to QBO.
  $query = db_select('commerce_tax_rate', 't');
  $query->isNotNull('quickbooks_tax_id');
  $query->fields('t', array('quickbooks_tax_id'));

  $record = $query->execute()->fetchAll();
  if ($record) {
    foreach ($record as $item) {
      db_delete('rules_config')->condition('name', 'commerce_tax_rate_qbo_tax_rate_' . $item->quickbooks_tax_id, '=')->execute();
    }
  }

  db_delete(JI_COMMERCE_TAXES_COMMERCE_TAX_RATE_TABLE)->isNotNull('quickbooks_tax_id')->execute();

  db_drop_field(JI_COMMERCE_TAXES_COMMERCE_TAX_RATE_TABLE, 'quickbooks_tax_id');
  db_drop_field(JI_COMMERCE_TAXES_COMMERCE_TAX_RATE_TABLE, 'quickbooks_tax_active');
  db_drop_field(JI_COMMERCE_TAXES_COMMERCE_TAX_RATE_TABLE, 'quickbooks_tax_updated');

  // Delete local tax variable that was used for orders without shipping.
  variable_del('ji_commerce_taxes_local_tax_rate');
}
